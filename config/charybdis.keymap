#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&sk { quick-release; };

/ {
    ZMK_MACRO(

    num_gui,

    bindings =
        <&macro_press &mo 3 &kp LGUI>,
        <&macro_pause_for_release>,
        <&macro_release &mo 3 &kp LGUI>;

    )

    combos {
        compatible = "zmk,combos";

        escc {
            bindings = <&kp ESC>;
            key-positions = <38 27>;
        };

        leftclick {
            bindings = <&leftclick>;
            key-positions = <28 27>;
        };

        rightclick {
            bindings = <&rightclick>;
            key-positions = <44 45>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <19 31>;
        };

        undo {
            bindings = <&kp LC(Z)>;
            key-positions = <16 15>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <26 27>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <27 28 26>;
        };

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <26 27 25>;
        };

        btclear {
            bindings = <&bt BT_CLR>;
            key-positions = <28 29 30 31>;
        };

        stickyctrl {
            bindings = <&sk LCTRL>;
            key-positions = <15 27>;
        };

        stickyalt {
            bindings = <&sk LEFT_ALT>;
            key-positions = <14 26>;
        };

        stickyshift {
            bindings = <&sk LEFT_SHIFT>;
            key-positions = <16 28>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <51 52>;
        };
    };

    macros {
        info: info {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp N &kp F &kp O &kp LPAR &kp SQT &kp FSLH &kp FSLH &kp SQT &kp RPAR &kp LEFT>;
            label = "INFO";
        };

        statement: statement {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RET &kp LEFT_BRACE &kp RET &kp RBRC &kp UP_ARROW &kp ENTER>;
            label = "STATEMENT";
        };

        value: value {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(V) &kp LS(A) &kp LS(L) &kp LS(U) &kp LS(E) &kp LPAR &kp O &kp B &kp J &kp E &kp C &kp T>;
            label = "VALUE";
        };

        altone: altone {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_ALT &kp NUMBER_1>;
            label = "ALTONE";
        };

        altzero: altzero {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_ALT &kp N0>;
            label = "ALTZERO";
        };

        alta: alta {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_ALT &kp A>;
            label = "ALTA";
        };

        alttwo: alttwo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_ALT &kp NUMBER_2>;
            label = "ALTTWO";
        };

        altup: altup {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_ALT &kp UP_ARROW>;
            label = "ALTUP";
        };

        altdown: altdown {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_ALT &kp DOWN>;
            label = "ALTDOWN";
        };

        althome: althome {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_ALT &kp HOME>;
            label = "ALTHOME";
        };

        altleft: altleft {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_ALT &kp LEFT>;
            label = "ALTLEFT";
        };

        leftclick: leftclick {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_DIVIDE &kp KP_N5>;
            label = "LEFTCLICK";
        };

        rightclick: rightclick {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_SUBTRACT &kp KP_N5>;
            label = "RIGHTCLICK";
        };

        repbor: repbor {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(C) &kp N4 &kp LS(G) &kp LS(K) &kp P &kp LS(T) &kp LS(H) &kp LS(S) &kp LS(I) &kp N &kp L &kp M &kp LS(I) &kp N9 &kp LS(Z) &kp U &kp N &kp N4 &kp LS(A) &kp LS(J) &kp E &kp LS(M) &kp J &kp LS(V) &kp LS(M) &kp N2 &kp N4 &kp N5 &kp N6 &kp N3 &kp N2 &kp D &kp LS(F) &kp LS(Y) &kp LS(I) &kp LS(N) &kp N0 &kp LS(X) &kp B &kp S &kp LS(Y) &kp E &kp J &kp C &kp I &kp N5 &kp N9 &kp F &kp LS(Z) &kp LS(T) &kp U &kp N0 &kp LS(J) &kp LS(Q) &kp LS(Q) &kp LS(J) &kp N9 &kp N9 &kp LS(B) &kp LS(D) &kp LS(A) &kp LS(C) &kp LS(A) &kp LS(A) &kp LS(A) &kp LS(A) &kp LS(A) &kp LS(I) &kp LS(A) &kp LS(Y) &kp N &kp LS(K) &kp LS(A) &kp LS(A) &kp LS(A) &kp LS(S) &kp LS(A) &kp LS(Z) &kp LS(D) &kp LS(O) &kp N2 &kp L &kp D &kp LS(M)>;
            label = "REPBOR";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alphabet {
            bindings = <
&trans  &trans  &trans  &trans     &trans       &trans     &trans          &trans       &trans     &trans      &trans     &trans
&trans  &kp W   &kp L   &kp Y      &kp P        &kp B      &kp Z           &kp F        &kp O      &kp U       &kp SQT    &trans
&trans  &kp C   &kp R   &lt 2 S    &kp T        &kp G      &kp M           &kp N        &kp E      &kp I       &kp A      &trans
&trans  &kp Q   &kp J   &kp V      &kp D        &lt 1 K    &lt 1 X         &kp H        &kp COMMA  &kp PERIOD  &kp SLASH  &trans
                        &kp ENTER  &lt 1 SPACE  &kp TAB    &sk LEFT_SHIFT  &key_repeat
                                   &trans       &trans     &trans
            >;

            trackball-bindings = <&tmv_coarse>;
        };

        number {
            bindings = <
&trans  &trans  &trans  &trans          &trans        &trans    &trans  &trans        &trans       &trans        &trans  &trans
&trans  &trans  &trans  &trans          &trans        &trans    &trans  &trans        &trans       &trans        &trans  &trans
&trans  &kp N9  &kp N5  &lt 2 NUMBER_1  &kp NUMBER_3  &trans    &trans  &kp NUMBER_2  &kp N0       &kp NUMBER_4  &kp N8  &trans
&trans  &trans  &trans  &bootloader     &kp N7        &trans    &trans  &kp NUMBER_6  &bootloader  &trans        &trans  &trans
                        &trans          &trans        &trans    &trans  &trans
                                        &trans        &trans    &trans
            >;
        };

        navigation {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans         &trans        &trans       &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans         &kp UP_ARROW  &trans       &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp HOME  &kp LEFT       &kp DOWN      &kp RIGHT    &kp END  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &kp PAGE_DOWN  &trans        &kp PAGE_UP  &trans   &trans
                        &trans  &trans  &trans    &trans    &trans
                                &trans  &trans    &trans
            >;
        };
    };
};
